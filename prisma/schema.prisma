// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  STUDENT
  TEACHER
  ADMIN
}

model User {
  id              String    @id @default(uuid())
  name            String
  email           String    @unique
  password        String?
  profile_image   String?
  role            Role      @default(USER)
  isEmailVerified Boolean   @default(false)
  isPasswordSet   Boolean   @default(false)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  Account         Account[]
}

model Account {
  id                String    @id @default(uuid())
  user              User      @relation(fields: [userId], references: [id])
  userId            String
  provider          String
  providerAccountId String
  access_token      String?
  id_token          String?
  scope             String?
  token_type        String?
  session_state     String?
  expires_at        DateTime?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt

  @@unique([provider, providerAccountId])
}

// for email verification
model verificationToken {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([identifier], name: "idx_identifier")
}
